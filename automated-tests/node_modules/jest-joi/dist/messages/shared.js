"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.errorExplanation = exports.printObject = exports.stack = exports.print = exports.colors = exports.labels = void 0;
const chalk = require("chalk");
const utils_1 = require("../utils");
__exportStar(require("../utils"), exports);
exports.labels = {
    error: "Error:",
    expected: "Expected:",
    received: "Received:",
    schema: "Schema:",
};
exports.colors = {
    expected: chalk.green,
    received: chalk.red,
};
const print = (message) => () => message;
exports.print = print;
const stack = (lines) => {
    const reducer = (accumulator, value) => {
        return value === "" ? accumulator + "\n" : accumulator + "\n" + value;
    };
    return lines.reduce(reducer);
};
exports.stack = stack;
const printObject = (object) => {
    try {
        return (0, utils_1.stringifyObject)(object, { objectMargins: true, maxNesting: 2 });
    }
    catch (error) {
        return "(Unserializable)";
    }
};
exports.printObject = printObject;
const errorExplanation = (error) => {
    const annotation = error.annotate();
    const parsed = annotation.match(/^".+?" (.+)$/);
    if (parsed && parsed[1])
        return `Received ${parsed[1]}`;
    else
        return annotation;
};
exports.errorExplanation = errorExplanation;
